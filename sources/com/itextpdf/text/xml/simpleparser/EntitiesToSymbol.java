package com.itextpdf.text.xml.simpleparser;

import androidx.exifinterface.media.ExifInterface;
import com.dd.plist.ASCIIPropertyListParser;
import com.itextpdf.text.Chunk;
import com.itextpdf.text.Font;
import com.itextpdf.text.pdf.Barcode128;
import com.itextpdf.text.xml.xmp.PdfProperties;
import java.util.HashMap;
import java.util.Map;
import kotlin.text.Typography;

public class EntitiesToSymbol {

    /* renamed from: a  reason: collision with root package name */
    private static final Map<String, Character> f27377a;

    static {
        HashMap hashMap = new HashMap();
        f27377a = hashMap;
        hashMap.put("169", 227);
        hashMap.put("172", 216);
        hashMap.put("174", 210);
        Character valueOf = Character.valueOf(Typography.q);
        hashMap.put("177", valueOf);
        hashMap.put("215", 180);
        hashMap.put("247", 184);
        hashMap.put("8230", 188);
        Character valueOf2 = Character.valueOf(Typography.f29122i);
        hashMap.put("8242", valueOf2);
        hashMap.put("8243", 178);
        hashMap.put("8260", 164);
        hashMap.put("8364", 240);
        hashMap.put("8465", 193);
        Character valueOf3 = Character.valueOf(Barcode128.N);
        hashMap.put("8472", valueOf3);
        hashMap.put("8476", 194);
        hashMap.put("8482", 212);
        hashMap.put("8501", 192);
        hashMap.put("8592", 172);
        hashMap.put("8593", 173);
        hashMap.put("8594", Character.valueOf(Typography.o));
        hashMap.put("8595", 175);
        hashMap.put("8596", 171);
        hashMap.put("8629", 191);
        hashMap.put("8656", 220);
        hashMap.put("8657", 221);
        hashMap.put("8658", 222);
        hashMap.put("8659", 223);
        hashMap.put("8660", 219);
        hashMap.put("8704", '\"');
        hashMap.put("8706", Character.valueOf(Typography.r));
        hashMap.put("8707", '$');
        hashMap.put("8709", Character.valueOf(Barcode128.Q));
        hashMap.put("8711", 209);
        hashMap.put("8712", 206);
        hashMap.put("8713", 207);
        hashMap.put("8717", '\'');
        hashMap.put("8719", 213);
        hashMap.put("8721", 229);
        hashMap.put("8722", '-');
        hashMap.put("8727", '*');
        hashMap.put("8729", Character.valueOf(Typography.s));
        hashMap.put("8730", 214);
        hashMap.put("8733", 181);
        hashMap.put("8734", 165);
        hashMap.put("8736", 208);
        hashMap.put("8743", 217);
        hashMap.put("8744", 218);
        hashMap.put("8745", Character.valueOf(Barcode128.R));
        hashMap.put("8746", 200);
        hashMap.put("8747", 242);
        hashMap.put("8756", Character.valueOf(ASCIIPropertyListParser.p));
        hashMap.put("8764", '~');
        hashMap.put("8773", '@');
        hashMap.put("8776", 187);
        hashMap.put("8800", 185);
        hashMap.put("8801", 186);
        hashMap.put("8804", Character.valueOf(Typography.f29123j));
        hashMap.put("8805", 179);
        hashMap.put("8834", Character.valueOf(Barcode128.V));
        hashMap.put("8835", 201);
        hashMap.put("8836", Character.valueOf(Barcode128.U));
        hashMap.put("8838", Character.valueOf(Barcode128.W));
        hashMap.put("8839", Character.valueOf(Barcode128.M));
        hashMap.put("8853", Character.valueOf(Barcode128.P));
        hashMap.put("8855", Character.valueOf(Barcode128.O));
        hashMap.put("8869", '^');
        hashMap.put("8901", Character.valueOf(Typography.f29121h));
        hashMap.put("8992", 243);
        hashMap.put("8993", 245);
        hashMap.put("9001", 225);
        hashMap.put("9002", 241);
        hashMap.put("913", 'A');
        hashMap.put("914", Character.valueOf(ASCIIPropertyListParser.u));
        hashMap.put("915", 'G');
        hashMap.put("916", Character.valueOf(ASCIIPropertyListParser.t));
        hashMap.put("917", 'E');
        hashMap.put("918", Character.valueOf(ASCIIPropertyListParser.D));
        hashMap.put("919", 'H');
        hashMap.put("920", 'Q');
        hashMap.put("921", Character.valueOf(ASCIIPropertyListParser.x));
        hashMap.put("922", 'K');
        hashMap.put("923", 'L');
        hashMap.put("924", 'M');
        hashMap.put("925", Character.valueOf(ASCIIPropertyListParser.w));
        hashMap.put("926", 'X');
        hashMap.put("927", 'O');
        hashMap.put("928", 'P');
        hashMap.put("929", Character.valueOf(ASCIIPropertyListParser.y));
        hashMap.put("931", 'S');
        hashMap.put("932", Character.valueOf(ASCIIPropertyListParser.C));
        hashMap.put("933", 'U');
        hashMap.put("934", 'F');
        hashMap.put("935", 'C');
        hashMap.put("936", Character.valueOf(ASCIIPropertyListParser.v));
        hashMap.put("937", 'W');
        hashMap.put("945", 'a');
        hashMap.put("946", 'b');
        hashMap.put("947", Character.valueOf(Barcode128.J));
        hashMap.put("948", Character.valueOf(Barcode128.G));
        hashMap.put("949", Character.valueOf(Barcode128.H));
        hashMap.put("950", 'z');
        hashMap.put("951", Character.valueOf(Barcode128.K));
        hashMap.put("952", 'q');
        hashMap.put("953", Character.valueOf(Barcode128.L));
        hashMap.put("954", 'k');
        hashMap.put("955", 'l');
        hashMap.put("956", 'm');
        hashMap.put("957", 'n');
        hashMap.put("958", 'x');
        hashMap.put("959", 'o');
        hashMap.put("960", 'p');
        hashMap.put("961", 'r');
        hashMap.put("962", 'V');
        hashMap.put("963", 's');
        hashMap.put("964", 't');
        hashMap.put("965", 'u');
        hashMap.put("966", Character.valueOf(Barcode128.I));
        hashMap.put("967", Character.valueOf(Barcode128.F));
        hashMap.put("9674", 224);
        hashMap.put("968", 'y');
        hashMap.put("969", 'w');
        hashMap.put("977", 'J');
        hashMap.put("978", 161);
        hashMap.put("981", 'j');
        hashMap.put("982", 'v');
        hashMap.put("9824", 170);
        hashMap.put("9827", Character.valueOf(Typography.f29124k));
        hashMap.put("9829", Character.valueOf(Typography.f29125l));
        hashMap.put("9830", 168);
        hashMap.put("Alpha", 'A');
        hashMap.put("Beta", Character.valueOf(ASCIIPropertyListParser.u));
        hashMap.put("Chi", 'C');
        hashMap.put("Delta", Character.valueOf(ASCIIPropertyListParser.t));
        hashMap.put("Epsilon", 'E');
        hashMap.put("Eta", 'H');
        hashMap.put(ExifInterface.e0, 'G');
        hashMap.put("Iota", Character.valueOf(ASCIIPropertyListParser.x));
        hashMap.put("Kappa", 'K');
        hashMap.put("Lambda", 'L');
        hashMap.put("Mu", 'M');
        hashMap.put("Nu", Character.valueOf(ASCIIPropertyListParser.w));
        hashMap.put("Omega", 'W');
        hashMap.put("Omicron", 'O');
        hashMap.put("Phi", 'F');
        hashMap.put("Pi", 'P');
        hashMap.put("Prime", 178);
        hashMap.put("Psi", Character.valueOf(ASCIIPropertyListParser.v));
        hashMap.put("Rho", Character.valueOf(ASCIIPropertyListParser.y));
        hashMap.put("Sigma", 'S');
        hashMap.put("Tau", Character.valueOf(ASCIIPropertyListParser.C));
        hashMap.put("Theta", 'Q');
        hashMap.put("Upsilon", 'U');
        hashMap.put("Xi", 'X');
        hashMap.put("Zeta", Character.valueOf(ASCIIPropertyListParser.D));
        hashMap.put("alefsym", 192);
        hashMap.put("alpha", 'a');
        hashMap.put("and", 217);
        hashMap.put("ang", 208);
        hashMap.put("asymp", 187);
        hashMap.put("beta", 'b');
        hashMap.put("cap", Character.valueOf(Barcode128.R));
        hashMap.put("chi", Character.valueOf(Barcode128.F));
        hashMap.put("clubs", Character.valueOf(Typography.f29124k));
        hashMap.put("cong", '@');
        hashMap.put("copy", 211);
        hashMap.put("crarr", 191);
        hashMap.put("cup", 200);
        hashMap.put("dArr", 223);
        hashMap.put("darr", 175);
        hashMap.put("delta", Character.valueOf(Barcode128.G));
        hashMap.put("diams", 168);
        hashMap.put("divide", 184);
        hashMap.put("empty", Character.valueOf(Barcode128.Q));
        hashMap.put("epsilon", Character.valueOf(Barcode128.H));
        hashMap.put("equiv", 186);
        hashMap.put("eta", Character.valueOf(Barcode128.K));
        hashMap.put("euro", 240);
        hashMap.put("exist", '$');
        hashMap.put("forall", '\"');
        hashMap.put("frasl", 164);
        hashMap.put("gamma", Character.valueOf(Barcode128.J));
        hashMap.put("ge", 179);
        hashMap.put("hArr", 219);
        hashMap.put("harr", 171);
        hashMap.put("hearts", Character.valueOf(Typography.f29125l));
        hashMap.put("hellip", 188);
        hashMap.put("horizontal arrow extender", 190);
        hashMap.put("image", 193);
        hashMap.put("infin", 165);
        hashMap.put("int", 242);
        hashMap.put("iota", Character.valueOf(Barcode128.L));
        hashMap.put("isin", 206);
        hashMap.put("kappa", 'k');
        hashMap.put("lArr", 220);
        hashMap.put("lambda", 'l');
        hashMap.put("lang", 225);
        hashMap.put("large brace extender", 239);
        hashMap.put("large integral extender", 244);
        hashMap.put("large left brace (bottom)", 238);
        hashMap.put("large left brace (middle)", 237);
        hashMap.put("large left brace (top)", 236);
        hashMap.put("large left bracket (bottom)", 235);
        hashMap.put("large left bracket (extender)", 234);
        hashMap.put("large left bracket (top)", 233);
        hashMap.put("large left parenthesis (bottom)", 232);
        hashMap.put("large left parenthesis (extender)", 231);
        hashMap.put("large left parenthesis (top)", 230);
        hashMap.put("large right brace (bottom)", 254);
        hashMap.put("large right brace (middle)", 253);
        hashMap.put("large right brace (top)", 252);
        hashMap.put("large right bracket (bottom)", 251);
        hashMap.put("large right bracket (extender)", 250);
        hashMap.put("large right bracket (top)", 249);
        hashMap.put("large right parenthesis (bottom)", 248);
        hashMap.put("large right parenthesis (extender)", 247);
        hashMap.put("large right parenthesis (top)", 246);
        hashMap.put("larr", 172);
        hashMap.put("le", Character.valueOf(Typography.f29123j));
        hashMap.put("lowast", '*');
        hashMap.put("loz", 224);
        hashMap.put("minus", '-');
        hashMap.put("mu", 'm');
        hashMap.put("nabla", 209);
        hashMap.put("ne", 185);
        hashMap.put("not", 216);
        hashMap.put("notin", 207);
        hashMap.put("nsub", Character.valueOf(Barcode128.U));
        hashMap.put("nu", 'n');
        hashMap.put("omega", 'w');
        hashMap.put("omicron", 'o');
        hashMap.put("oplus", Character.valueOf(Barcode128.P));
        hashMap.put("or", 218);
        hashMap.put("otimes", Character.valueOf(Barcode128.O));
        hashMap.put(PdfProperties.f27412d, Character.valueOf(Typography.r));
        hashMap.put("perp", '^');
        hashMap.put("phi", Character.valueOf(Barcode128.I));
        hashMap.put("pi", 'p');
        hashMap.put("piv", 'v');
        hashMap.put("plusmn", valueOf);
        hashMap.put("prime", valueOf2);
        hashMap.put("prod", 213);
        hashMap.put("prop", 181);
        hashMap.put("psi", 'y');
        hashMap.put("rArr", 222);
        hashMap.put("radic", 214);
        hashMap.put("radical extender", '`');
        hashMap.put("rang", 241);
        hashMap.put("rarr", Character.valueOf(Typography.o));
        hashMap.put("real", 194);
        hashMap.put("reg", 210);
        hashMap.put("rho", 'r');
        hashMap.put("sdot", Character.valueOf(Typography.f29121h));
        hashMap.put("sigma", 's');
        hashMap.put("sigmaf", 'V');
        hashMap.put("sim", '~');
        hashMap.put("spades", 170);
        hashMap.put("sub", Character.valueOf(Barcode128.V));
        hashMap.put("sube", Character.valueOf(Barcode128.W));
        hashMap.put("sum", 229);
        hashMap.put("sup", 201);
        hashMap.put("supe", Character.valueOf(Barcode128.M));
        hashMap.put("tau", 't');
        hashMap.put("there4", Character.valueOf(ASCIIPropertyListParser.p));
        hashMap.put("theta", 'q');
        hashMap.put("thetasym", 'J');
        hashMap.put("times", 180);
        hashMap.put("trade", 212);
        hashMap.put("uArr", 221);
        hashMap.put("uarr", 173);
        hashMap.put("upsih", 161);
        hashMap.put("upsilon", 'u');
        hashMap.put("vertical arrow extender", Character.valueOf(Typography.t));
        hashMap.put("weierp", valueOf3);
        hashMap.put("xi", 'x');
        hashMap.put("zeta", 'z');
    }

    public static Chunk a(String str, Font font) {
        char b2 = b(str);
        if (b2 == 0) {
            try {
                return new Chunk(String.valueOf((char) Integer.parseInt(str)), font);
            } catch (Exception unused) {
                return new Chunk(str, font);
            }
        } else {
            return new Chunk(String.valueOf(b2), new Font(Font.FontFamily.SYMBOL, font.m(), font.n(), font.i()));
        }
    }

    public static char b(String str) {
        Character ch = f27377a.get(str);
        if (ch == null) {
            return 0;
        }
        return ch.charValue();
    }
}
